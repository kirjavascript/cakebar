halp
====
css:
https://developer.gnome.org/gtk3/stable/theming.html
https://developer.gnome.org/gtk3/stable/chap-css-properties.html
https://people.gnome.org/~desrt/gtk/html/GtkCssProvider.html
system tray:
https://standards.freedesktop.org/systemtray-spec/systemtray-spec-latest.html#idm139990069470464
https://github.com/thatsmydoing/rusttray (original implementation)
wm stuff:
https://standards.freedesktop.org/wm-spec/wm-spec-latest.html#idm140200472739424
https://github.com/windelicato/dotfiles/wiki/bspwm-for-dummies
https://github.com/pw4ever/awesome-wm-config#setup
awesome-client
https://github.com/Rahix/pa-visualizer
https://github.com/onodera-punpun/melonbar - openbox
GTK_DEBUG=interactive
https://unix.stackexchange.com/questions/14129/gtk-enable-set-dark-theme-on-a-per-application-basis
GTK_THEME=Adwaita:light -> std::env::Set_Var
https://0x46.net/thoughts/2019/02/01/dotfile-madness/
testing:
Xephyr -br -ac -noreset -screen 1200x800 :1
DISPLAY=:1 i3

0.4.0: static wm_util, 2018 edition
features for 1.0.0: tray bugs, window title onload bug, multiple install options
remove show/hide, reduce component trait to just destroy

completor
===
wmutil.run_command()
add trigger (Open)
dmenu
ctrl shift d
recency / history
command / !shell cmd / /find
use event listener
force focus

ipc
====
help
allow ipc in menu objs
rustyline
Open(Selector) completor/startmenu // checkselector(config)
watch / unwatch

wm refactoring
===
give wmutil a static lifetime
    I've been considering replacing something that uses an Rc<RefCell<_>> with a global static mut
    would mean less reference counting and easier to use code
    is there anything you can do to ensure you can only use a static in the main thread

default-layout global prop
config.has_type("workspace") to disable listeners, etc
startup animation
autohide bar
strip out show/hide
interval float for /s Timer::get_interval(config) ::from_config

tray
====
fix tray fullscreen latency/mm bug with events
reload theme -> wm_util event
reload event -> ???
ipc doesn't show/hide (fullscreen? )
wm restart event restack tray
send multiple IPC commands at once
spacing
bug: on no icons width = 1

file watcher
===
window change from popup to toplevel bug
restart position bug

components
====
17:10:12 <+isk> Kirjava: https://github.com/bartlettmic/arduino-projects/blob/master/RoomLEDs/Uno_Slave_Reader/Visualizer.h
17:10:45 <+isk> also if you're interested in terminal ascii visual representation: https://github.com/bartlettmic/arduino-projects/blob/master/RoomLEDs/fade.cpp
1D colour red-green lerping equalizer
bspwm mode
gmail -> plugins in examples folder
script - classes for return code
prompt -> ipc command
remote ip
active window xprop
windows
onclick = ""
mpd ipc
dmenu gtk::WindowType::Popup
container: clickable (all components onclick?)
iOS style dock
notifications
battery - time remaing / time to charge
label#Label here for layout
completion
keylock notifier
gtk3-demo
gtk3-widget-factory
modal
workspace multiple rows
about splashscreen

docs
====
add / remove - curl | sh install
    or install from cargo (google scrftch)
pandoc
GTKTheme can affect bar
bindsym $mod+m exec -- --message / sxhkdrc
ipc help
AUR / shell command (via github release)
file watcher
add polybar example
undocu'd;
    dropdown/label
    workspaces/spacing
    BSPWM_SOCKET
    CAKEYBAR_SOCKET
    .focused class for Bar

type thing
https://play.rust-lang.org/?gist=ed3cac7715890bcebb9c25634429f0ca&version=stable&mode=debug

===
osx top bar (hover) / pice of cake / powerline (half transparency w/ small window title) / hexagons (visualizer + overhang via bar/float) / busy (all stats)
crosspost on unixporn / r/rust [OC] a piece of cakeybar / r/fui
live reload gifcurry
https://github.com/sharkdp/hexyl
SVG blobs
slanted workspace names with SVG
gifcurry

https://alpha.wallhaven.cc/
http://simpledesktops.com
https://publicdomainvectors.org/en/search/cpu/date/svg/90/1
https://icons8.com/icon/set/public%20domain/all
